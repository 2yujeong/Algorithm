/*
문제 출처 : https://www.acmicpc.net/problem/2869 (백준 온라인 저지)

달팽이는 낮에 A미터를 올라갈 수 있지만 밤에 잠을 자는 동안에 B미터 미끄러진다. 
나무의 정상에 도달한 후에는 미끄러지지 않는다.
달팽이가 높이 V인 나무 막대를 올라가는 데 며칠이 걸리는지 구하는 문제.

입력의 범위가 1,000,000,000까지고 시간 제한은 0.15초이기 때문에 시뮬레이션으로 구현하면 시간 초과가 뜬다.
달팽이는 낮에는 A미터를 올라가고, 밤에는 B미터를 내려가므로 하루에 A - B미터를 올라간다.
따라서 V / (A - B)로 며칠이 걸리는지 구할 수 있다.
이때 나무의 정상에 도달한 후에는 미끄러지지 않는다는 조건이 있으므로 
만약 낮에 5미터를 올라갔다가 밤에 4미터를 미끄러지는데 정상까지 남은 거리가 3미터라면 
3 / (5 - 4) = 3일이 아니라 하루만 올라가도 정상에 도착할 수 있다.
이러한 경우를 처리해주기 위해 정상에 도달하는 마지막 날에는 무조건 미끄러지지 않고 A미터를 올라간다고 가정하고
V - A미터 지점까지만 A - B미터씩 움직였을 때 며칠이 걸리는지 계산한 뒤 A미터를 올라가는 마지막 날인 1일을 더해준다.

시간복잡도는 O(1)
*/

#include <iostream>
#include <string>
using namespace std;

int main() {
	int a, b, v;
	cin >> a >> b >> v;

	if ((v - a) % (a - b) == 0)
		cout << (v - a) / (a - b) + 1;
	else // 마지막에 올라가야 하는 남은 높이가 a미터보다 더 크기 때문에 하루를 더 더해준다. 
		cout << (v - a) / (a - b) + 2;

	return 0;
}
