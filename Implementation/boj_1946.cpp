/*
문제 출처 : https://www.acmicpc.net/problem/1946 (백준 온라인 저지)

신입 사원 채용에서 다른 모든 지원자와 비교했을 때 서류심사 성적과 면접시험 성적 중 적어도 하나가 다른 지원자보다 떨어지지 않는 자만 선발하려고 한다.
n명의 지원자의 서류심사 순위와 면접 성적 순위가 각각 주어질 때, 이번 신규 사원 채용에서 선발할 수 있는 신입사원의 최대 인원수를 구하는 문제.

다른 모든 지원자들 중 서류 성적과 면접 성적 둘 다 나보다 높은 지원자가 한 명이라도 존재하면 탈락한다.
우선 서류심사 순위를 기준으로 오름차순하면 서류심사가 1위인 사람은 절대 탈락할 일이 없다.
서류심사가 2위인 사람부터는, 자기보다 서류 점수가 높은 지원자가 존재하므로 그 지원자보다 면접 점수는 더 높아야 합격할 수 있다.
이를 구현하기 위해선 먼저 서류 순위를 기준으로 오름차순 정렬하고, 2위부터 차례로 자신보다 서류 점수가 높은 합격자가 면접 점수까지 나보다 높은지 확인한다.
이때 서류 순위가 낮은 합격자일 수록 면접 점수는 높다는 뜻이므로 
자신보다 서류 순위가 높은 합격자들 중에서 가장 서류 순위가 낮은(자신과 가장 순위가 가까운) 합격자의 면접 점수하고만 비교해서 자신이 높으면 합격이다.

시간복잡도는 O(nlog n)
*/

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
	int t;
	cin >> t;

	while (t--) {
		int n;
		cin >> n;

		vector<pair<int, int>> v;

		for (int i = 0; i < n; i++) {
			int a, b;
			cin >> a >> b;

			v.push_back({ a, b });
		}

		sort(v.begin(), v.end()); // pair의 first(서류심사 순위)를 기준으로 오름차순 정렬

		// 서류심사 순위가 1위인 사람은 서류심사 성적이 다른 어느 지원자보다도 떨어지지 않으므로 무조건 선발
		int cnt = 1; 
		int rank = v[0].second;
		for (int i = 1; i < n; i++) {
			if (v[i].second < rank) { // 서류심사 성적은 앞선 i명의 지원자들보다 낮지만 면접 성적이 i명보다 높은 경우
				cnt++;
				rank = v[i].second;
			}
		}

		cout << cnt << endl;
	}

	return 0;
}
